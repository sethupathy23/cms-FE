import './App.css'
import {Counter} from './Counter'// named import 
import { ContentList } from './ContentList';
import { Routes, Route, Link, useNavigate } from "react-router-dom";
import { NotFound } from './NotFound';
import { Home } from './Home';
import { useState } from 'react';
import Button from '@mui/material/Button';
import AppBar from '@mui/material/AppBar';
import Box from '@mui/material/Box';
import Toolbar from '@mui/material/Toolbar';
import Typography from '@mui/material/Typography';

import IconButton from '@mui/material/IconButton';
import MenuIcon from '@mui/icons-material/Menu';
import { ThemeProvider, createTheme } from '@mui/material/styles';
import Paper from '@mui/material/Paper';
import Brightness4Icon from '@mui/icons-material/Brightness4';
import Brightness7Icon from '@mui/icons-material/Brightness7';
import { AddContent } from './AddContent';
import { ContentDetails } from './ContentDetails';
import { BasicForm } from './BasicForm';
import { EditContent } from './EditContent';
import {API} from "./global";
import { useEffect } from 'react';

function App() {
  // const INITIAL_CONTENT_LIST = [  {
//     "id":"81",
//     "name" : "What is Javascript",
//     "img" : "https://cdn.pixabay.com/photo/2015/04/23/17/41/javascript-736400_1280.png",
//     "summary" : "JavaScript is a scripting or programming language that allows you to implement complex features on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc. — you can bet that JavaScript is probably involved. It is the third layer of the layer cake of standard web technologies, two of which (HTML and CSS) we have covered in much more detail in other parts of the Learning Area.",
//     "creation" : "The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" : "Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//  },
//   {
//     "id":"82",
//     "name" : "What is HTML",
//     "img" : "https://c4.wallpaperflare.com/wallpaper/887/817/276/html-5-html-5-logo-wallpaper-preview.jpg",
//     "summary" : "The HyperText Markup Language or HTML is the standard markup language for documents designed to be displayed in a web browser. It defines the meaning and structure of web content. It is often assisted by technologies such as Cascading Style Sheets (CSS) and scripting languages such as JavaScript Web browsers receive HTML documents from a web server or from local storage and render the documents into multimedia web pages. HTML describes the structure of a web page semantically and originally included cues for its appearance. HTML elements are the building blocks of HTML pages. With HTML constructs, images and other objects such as interactive forms may be embedded into the rendered page. HTML provides a means to create structured documents by denoting structural semantics for text such as headings, paragraphs, lists, links, quotes, and other items. HTML elements are delineated by tags, written using angle brackets. Tags such as <img> and <input> directly introduce content into the page. Other tags such as <p> and </p> surround and provide information about document text and may include sub-element tags. Browsers do not display the HTML tags but use them to interpret the content of the page. HTML can embed programs written in a scripting language such as JavaScript, which affects the behavior and content of web pages. The inclusion of CSS defines the look and layout of content. The World Wide Web Consortium (W3C), former maintainer of the HTML and current maintainer of the CSS standards, has encouraged the use of CSS over explicit presentational HTML since 1997.[2] A form of HTML, known as HTML5, is used to display video and audio, primarily using the <canvas> element, together with JavaScript.",
//     "creation" : "The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" : "Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//   },
//   {
//     "id" : "83",
//     "name" : "What is Tailwind CSS",
//     "img" : "https://res.cloudinary.com/practicaldev/image/fetch/s--ktYESCeQ--/c_imagga_scale,f_auto,fl_progressive,h_900,q_auto,w_1600/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/dxy1c2bvl6odeo52dodk.jpg",
//     "creation" : "The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" : "Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//   },
//   {
//     "id" : "84",
//     "name" : "What is React JS",
//     "img" : "https://shethink.in/wp-content/uploads/2021/07/react.js-img.png",
//     "creation" : "The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" : "Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//   },
//   {
//     "id" : "85",
//     "name" : "What is React Native",
//     "img" : "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQbrYqugoZsdQRdo80-XE-ioj5Dxpg7w5p8IA&usqp=CAU",
//     "creation" : "The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" : "Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//   },
//   {
//     "id" : "86",
//     "name" : "What is Mongo DB",
//     "img" : "https://www.pngall.com/wp-content/uploads/13/Mongodb-PNG-Image-HD.png",
//     "creation" : "The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" : "Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//   },
//   {
//     "id" : "87",
//     "name" : "What is SQL",
//     "img" : "https://media.istockphoto.com/id/1565604597/photo/sql-statements-code-on-a-computer-monitor-with-databases-and-computer-server-background.webp?b=1&s=170667a&w=0&k=20&c=kXQlwMslg_HuAhMohaGwsIdk36qUCOrq2SLkjEvv7HE=",
//     "creation" : "The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" : "Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//   },
//   {
//     "id" : "88",
//     "name" : "What is Flutter",
//     "img" : "https://w0.peakpx.com/wallpaper/671/307/HD-wallpaper-flutter-code-coder-dart-google-programming.jpg",
//     "creation" : "The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" : "Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//   },
//   {
//     "id" : "89",
//     "name" : "What is Node JS",
//     "img" : "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSw0uM3M25tDITF6GSHpe8TyNDGPKujgzWXkg&usqp=CAU",
//     "creation" :"The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" :"Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//   },
//   {
//     "id" : "90",
//     "name" : "What is Express Js",
//     "img" : "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQtAETrZWSWWqvF9wvpKVCXs8pUqyxZd_btgyqpB9DxpCXsEqnM5IKg_kpaa10EQyXZYno&usqp=CAU",
//     "creation" : "The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web.[12] The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.[13][14] During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.[6 Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages.[5][6] Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was the hot new language, so Eich considered the JavaScript name a marketing ploy by Netscape.[16]",
//     "otherusage" : "Anonymous function JavaScript also supports anonymous functions.Delegation (object-oriented programming) JavaScript supports implicit and explicit delegation.Functions as roles (Traits and Mixins)Main articles: Role-oriented programming, Traits (computer science), and Mixing JavaScript natively supports various function-based implementations of Role[75] patterns like Traits[76][77] and Mixins.[78] Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.Object composition and inheritance Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.Miscellaneou,Zero-based number,JavaScript is a zero-index language.An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method Array and object literals  Main articles: Associative arrays and Object literal Like many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format. Regular expressions Main article: Regular expression  JavaScript also supports regular expressions in a manner similar to Perl, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.Promises and Async/await JavaScript supports promises and Async/await for handling asynchronous operations.[citation needed]   Promises Main article: Futures and promises",
//   }];

      const [contentList, setContentList] = useState([]);
      useEffect(() => {
        fetch(`${API}/cms`)
        .then((data) => data.json())
        .then((cms) => setContentList(cms));
      },[]);
      const navigate = useNavigate(); 
      const[mode, setMode] = useState("light");
      const darkTheme = createTheme({
        palette: {
          mode: mode,
        },
      });
      const bgStyles = {
        borderRadius : "0px",
        minHeight: "100vh",
      }
 return (
  <ThemeProvider theme={darkTheme}>
     <Paper sx={bgStyles} elevation={4} >
   
      <div>
        <AppBar position="static">
        <Toolbar>
          
          <Typography variant="h6" component="div" sx={{ flexGrow: 1 }}>
            CMS 
          </Typography>
          <div className='nav-btn'>
          <Button onClick={() => navigate("/")} color="inherit">Home</Button>
          <Button onClick={() => navigate("/cms")} color="inherit">CMS</Button>
          <Button onClick={() => navigate("/add-content")} color="inherit">Add</Button>
          </div>
          <Button onClick={() => setMode(mode === "dark" ? "light" : "dark")} 
          color="inherit" startIcon={mode === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}>
            {mode === "light" ? "dark" : "light"}  mode
          </Button>
         </Toolbar>
      </AppBar>
      
      {/* <Counter /> */}
      <Routes>
        <Route path="/" element={<Home />} /> 
        <Route path="/cms" element={<ContentList />} />
        <Route path="/cms/:id" element={<ContentDetails   />} />
        <Route path="/add-content" element={<AddContent  />} />
        <Route path="/basic-form" element={<BasicForm  />} />
        {/* (`/cms/edit/${cn.id`})}> */}
        <Route path="/cms/edit/:id" element={<EditContent />} />
        <Route path="*" element={<NotFound />} />
      </Routes> 
      </div>
   
      </ Paper >
    
      </ThemeProvider>
      )
}
export default App
